/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'antlr'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
    antlr "org.antlr:antlr4:4.12.0"

    api "org.antlr:antlr4-runtime:4.12.0"
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    testLogging {
        events "passed","skipped","failed"
    }
}

tasks.named('compileJava').configure {
    dependsOn generateGrammarSource
}

sourceSets {
    main {
        java {
            srcDir "${project.buildDir}/generated/sources/antlr/main"
        }
    }
}

java {
    sourceCompatibility "1.8"
    targetCompatibility "1.8"
}


generateGrammarSource {
    arguments += ["-visitor","-long-messages","-package","org.opendcs.shef.parser"]
    outputDirectory = file("${project.buildDir}/generated/sources/antlr/main/org/opendcs/shef/parser")
}

task grun(type: JavaExec) {
    dependsOn compileJava
    dependsOn generateGrammarSource
    classpath += sourceSets.main.runtimeClasspath
    classpath += fileTree(sourceSets.main.output.classesDirs.getAsPath())
    classpath += configurations.antlr
    main = "org.antlr.v4.gui.TestRig"
    args += "org.opendcs.shef.parser.shef"
    args += "shefFile"
    args += "-tokens"
    args += "-trace"
    args += "-diagnostics"
    args += "-gui"
    args += "src/test/resources/original_a_only.shef"
}
